name: CD Pipeline

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package -DskipTests

    - name: Run tests
      run: mvn test
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        OPENAI_BASE_URL: https://api.openai.com/v1/images/generations

    - name: Create JAR artifact
      run: mkdir -p artifacts && cp target/*.jar artifacts/

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-jar
        path: artifacts/*.jar

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,format=short
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-staging:
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get Docker image tag
      id: get-tag
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          echo "tag=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')" >> $GITHUB_OUTPUT
        else
          echo "tag=sha-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to Staging
      run: |
        echo "Deploying to Staging environment..."

        # Example deployment using Docker
        # This is a placeholder - replace with your actual deployment commands
        echo "Pulling Docker image ghcr.io/${{ github.repository }}:${{ steps.get-tag.outputs.tag }}"
        echo "Running container with proper environment variables"

        # Example Docker run command (commented out)
        # docker run -d \
        #   --name create-ia-profiles \
        #   -p 8080:8080 \
        #   -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
        #   -e OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }} \
        #   ghcr.io/${{ github.repository }}:${{ steps.get-tag.outputs.tag }}

        echo "Deployment to Staging completed"

  deploy-production:
    needs: deploy-staging
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get Docker image tag
      id: get-tag
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          echo "tag=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')" >> $GITHUB_OUTPUT
        else
          echo "tag=sha-$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to Production
      run: |
        echo "Deploying to Production environment..."

        # Example deployment using Docker
        # This is a placeholder - replace with your actual deployment commands
        echo "Pulling Docker image ghcr.io/${{ github.repository }}:${{ steps.get-tag.outputs.tag }}"
        echo "Running container with proper environment variables"

        # Example Docker run command (commented out)
        # docker run -d \
        #   --name create-ia-profiles \
        #   -p 8080:8080 \
        #   -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
        #   -e OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }} \
        #   ghcr.io/${{ github.repository }}:${{ steps.get-tag.outputs.tag }}

        echo "Deployment to Production completed"
