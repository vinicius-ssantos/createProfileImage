name: CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package -DskipTests

      - name: Run tests
        run: mvn test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: https://api.openai.com/v1/images/generations

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/

  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run SpotBugs
        run: mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.3.0:check

      - name: Run PMD
        run: mvn pmd:check

      - name: Run Checkstyle
        run: mvn checkstyle:check

      - name: Run Spotless
        run: mvn spotless:check

      - name: SonarCloud Scan
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=create_ia_profiles
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  performance-testing:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Start application for testing
        run: |
          mvn spring-boot:run -Dspring-boot.run.profiles=test &
          echo "Waiting for application to start..."
          sleep 30
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: https://api.openai.com/v1/images/generations

      - name: Run Gatling performance tests
        run: mvn gatling:test

      - name: Run JMeter performance tests
        run: mvn jmeter:jmeter

      - name: Upload Gatling results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gatling-results
          path: target/gatling/results/

      - name: Upload JMeter results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: target/jmeter/results/
