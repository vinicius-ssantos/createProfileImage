# Production Environment Configuration

# Server Configuration
server.port=8080

# Logging Configuration - Minimal for production
logging.level.com.example.matchapp=WARN
logging.level.org.springframework=ERROR
logging.level.net.logstash.logback=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Centralized Logging Configuration for Production
# These should be set as environment variables in production
logging.app.env=prod
# Default to a non-local Logstash server for production
# Override these with actual values in the deployment environment
logging.logstash.host=${LOGSTASH_HOST:logstash.production.internal}
logging.logstash.port=${LOGSTASH_PORT:5044}

# Image Generation Configuration
# In production, we use the highest quality settings
imagegen.provider=OPENAI
imagegen.image-size=1024x1024
imagegen.max-retries=5
imagegen.retry-delay=2000

# OpenAI Provider Configuration
imagegen.model=dall-e-3

# Spring AI Provider Configuration (not used by default in production)
imagegen.spring-ai-model=dall-e-3

# Error Handling - Minimal information for security
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never

# SpringDoc OpenAPI Configuration
springdoc.swagger-ui.tryItOutEnabled=false
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# Database Configuration - Production Environment
# These should be set as environment variables in production
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/profiles}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
